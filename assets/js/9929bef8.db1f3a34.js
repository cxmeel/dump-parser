"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[673],{77641:e=>{e.exports=JSON.parse('{"functions":[{"name":"fetchLatestVersionHash","desc":"Fetches the latest Roblox version hash from the Roblox API.","params":[],"returns":[{"desc":"","lua_type":"string"}],"function_type":"static","source":{"line":40,"path":"src/FetchDump.lua"}},{"name":"fetchVersionHash","desc":"Fetches the Roblox version hash for the given version from the\\nRoblox API. If no version is provided, it will default to the\\ncurrent version.","params":[{"name":"version","desc":"","lua_type":"string?"}],"returns":[{"desc":"","lua_type":"string"}],"function_type":"static","source":{"line":57,"path":"src/FetchDump.lua"}},{"name":"fetchVersionHashWithFallback","desc":"Fetches the Roblox version hash for the given version from the\\nRoblox API. If no version is provided, it will default to the\\ncurrent version. If the version hash cannot be found within the\\ndeployment history, it will fallback to the latest version hash\\non the server.","params":[{"name":"version","desc":"","lua_type":"string?"}],"returns":[{"desc":"","lua_type":"string"}],"function_type":"static","source":{"line":92,"path":"src/FetchDump.lua"}},{"name":"fetchDump","desc":"Fetches the API dump for the current version of Roblox from the\\nRoblox API. If a hash or version is provided, it will attempt to\\nfetch the dump for that hash or version.","params":[{"name":"hashOrVersion","desc":"","lua_type":"string?"}],"returns":[{"desc":"","lua_type":"(APIDump, versionHash)"}],"function_type":"static","source":{"line":112,"path":"src/FetchDump.lua"}}],"properties":[],"types":[],"name":"FetchDump","desc":"An internal module that handles fetching the Roblox API dump\\nfrom the Roblox API. It is accessed by the [`fetchDump`][Dump.fetchDump]\\nfunction on the [`Dump`][Dump] class.","private":true,"source":{"line":10,"path":"src/FetchDump.lua"}}')}}]);